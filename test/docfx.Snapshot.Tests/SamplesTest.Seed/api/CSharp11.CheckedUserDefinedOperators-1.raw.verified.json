{
  "uid": "CSharp11.CheckedUserDefinedOperators`1",
  "isEii": false,
  "isExtensionMethod": false,
  "parent": {
    "uid": "CSharp11",
    "isEii": false,
    "isExtensionMethod": false,
    "name": [
      {
        "lang": "csharp",
        "value": "CSharp11"
      },
      {
        "lang": "vb",
        "value": "CSharp11"
      }
    ],
    "nameWithType": [
      {
        "lang": "csharp",
        "value": "CSharp11"
      },
      {
        "lang": "vb",
        "value": "CSharp11"
      }
    ],
    "fullName": [
      {
        "lang": "csharp",
        "value": "CSharp11"
      },
      {
        "lang": "vb",
        "value": "CSharp11"
      }
    ],
    "specName": [
      {
        "lang": "csharp",
        "value": "<xref uid=\"CSharp11\" text=\"CSharp11\" alt=\"CSharp11\"/>"
      },
      {
        "lang": "vb",
        "value": "<xref uid=\"CSharp11\" text=\"CSharp11\" alt=\"CSharp11\"/>"
      }
    ],
    "level": 0
  },
  "children": [
    {
      "uid": "CSharp11.CheckedUserDefinedOperators`1.op_Addition(`0,`0)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "CSharp11.CheckedUserDefinedOperators`1",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "operator +(T, T)"
        },
        {
          "lang": "vb",
          "value": "+(T, T)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "CheckedUserDefinedOperators<T>.operator +(T, T)"
        },
        {
          "lang": "vb",
          "value": "CheckedUserDefinedOperators(Of T).+(T, T)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "CSharp11.CheckedUserDefinedOperators<T>.operator +(T, T)"
        },
        {
          "lang": "vb",
          "value": "CSharp11.CheckedUserDefinedOperators(Of T).+(T, T)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"CSharp11.CheckedUserDefinedOperators`1.op_Addition(`0,`0)\" text=\"operator +(T, T)\" alt=\"CSharp11.CheckedUserDefinedOperators&lt;T&gt;.operator +(T, T)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"CSharp11.CheckedUserDefinedOperators`1.op_Addition(`0,`0)\" text=\"operator +(T, T)\" alt=\"CSharp11.CheckedUserDefinedOperators&lt;T&gt;.operator +(T, T)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "static T operator +(T lhs, T rhs)"
          },
          {
            "lang": "vb",
            "value": "Shared Operator +(lhs As T, rhs As T) As T"
          }
        ],
        "parameters": [
          {
            "id": "lhs",
            "type": {
              "uid": "{T}",
              "definition": "T",
              "name": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
                }
              ]
            }
          },
          {
            "id": "rhs",
            "type": {
              "uid": "{T}",
              "definition": "T",
              "name": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "{T}",
            "definition": "T",
            "name": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "samples/seed/src/DotnetNew/CSharp11.cs",
          "branch": "main",
          "repo": "https://github.com/dotnet/docfx"
        },
        "id": "op_Addition",
        "path": "src/DotnetNew/CSharp11.cs",
        "startLine": 28,
        "endLine": 0,
        "isExternal": false
      },
      "assemblies": [
        "DotnetNew"
      ],
      "namespace": "CSharp11",
      "overload": {
        "uid": "CSharp11.CheckedUserDefinedOperators`1.op_Addition*",
        "name": [
          {
            "lang": "csharp",
            "value": "operator +"
          },
          {
            "lang": "vb",
            "value": "+"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "operator CheckedUserDefinedOperators.operator +"
          },
          {
            "lang": "vb",
            "value": "+"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "operator CSharp11.CheckedUserDefinedOperators.operator +"
          },
          {
            "lang": "vb",
            "value": "+"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "operator <xref uid=\"CSharp11.CheckedUserDefinedOperators`1.op_Addition*\" text=\"+\" alt=\"CSharp11.CheckedUserDefinedOperators.operator +\"/>"
          }
        ]
      },
      "level": 0,
      "type": "operator",
      "summary": null,
      "platform": null
    },
    {
      "uid": "CSharp11.CheckedUserDefinedOperators`1.op_CheckedAddition(`0,`0)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "CSharp11.CheckedUserDefinedOperators`1",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "operator checked +(T, T)"
        },
        {
          "lang": "vb",
          "value": "op_CheckedAddition(T, T)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "CheckedUserDefinedOperators<T>.operator checked +(T, T)"
        },
        {
          "lang": "vb",
          "value": "CheckedUserDefinedOperators(Of T).op_CheckedAddition(T, T)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "CSharp11.CheckedUserDefinedOperators<T>.operator checked +(T, T)"
        },
        {
          "lang": "vb",
          "value": "CSharp11.CheckedUserDefinedOperators(Of T).op_CheckedAddition(T, T)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"CSharp11.CheckedUserDefinedOperators`1.op_CheckedAddition(`0,`0)\" text=\"operator checked +(T, T)\" alt=\"CSharp11.CheckedUserDefinedOperators&lt;T&gt;.operator checked +(T, T)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"CSharp11.CheckedUserDefinedOperators`1.op_CheckedAddition(`0,`0)\" text=\"operator checked +(T, T)\" alt=\"CSharp11.CheckedUserDefinedOperators&lt;T&gt;.operator checked +(T, T)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "Not supported in c#"
          },
          {
            "lang": "vb",
            "value": "VB cannot support this operator."
          }
        ],
        "parameters": [
          {
            "id": "lhs",
            "type": {
              "uid": "{T}",
              "definition": "T",
              "name": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
                }
              ]
            }
          },
          {
            "id": "rhs",
            "type": {
              "uid": "{T}",
              "definition": "T",
              "name": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "{T}",
            "definition": "T",
            "name": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "samples/seed/src/DotnetNew/CSharp11.cs",
          "branch": "main",
          "repo": "https://github.com/dotnet/docfx"
        },
        "id": "op_CheckedAddition",
        "path": "src/DotnetNew/CSharp11.cs",
        "startLine": 37,
        "endLine": 0,
        "isExternal": false
      },
      "assemblies": [
        "DotnetNew"
      ],
      "namespace": "CSharp11",
      "overload": {
        "uid": "CSharp11.CheckedUserDefinedOperators`1.op_CheckedAddition*",
        "name": [
          {
            "lang": "csharp",
            "value": "operator checked +"
          },
          {
            "lang": "vb",
            "value": "op_CheckedAddition"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "operator checked CheckedUserDefinedOperators.operator checked +"
          },
          {
            "lang": "vb",
            "value": "CheckedUserDefinedOperators.op_CheckedAddition"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "operator checked CSharp11.CheckedUserDefinedOperators.operator checked +"
          },
          {
            "lang": "vb",
            "value": "CSharp11.CheckedUserDefinedOperators.op_CheckedAddition"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "operator checked <xref uid=\"CSharp11.CheckedUserDefinedOperators`1.op_CheckedAddition*\" text=\"+\" alt=\"CSharp11.CheckedUserDefinedOperators.operator checked +\"/>"
          }
        ]
      },
      "level": 0,
      "type": "operator",
      "summary": null,
      "platform": null
    },
    {
      "uid": "CSharp11.CheckedUserDefinedOperators`1.op_CheckedDecrement(`0)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "CSharp11.CheckedUserDefinedOperators`1",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "operator checked --(T)"
        },
        {
          "lang": "vb",
          "value": "op_CheckedDecrement(T)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "CheckedUserDefinedOperators<T>.operator checked --(T)"
        },
        {
          "lang": "vb",
          "value": "CheckedUserDefinedOperators(Of T).op_CheckedDecrement(T)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "CSharp11.CheckedUserDefinedOperators<T>.operator checked --(T)"
        },
        {
          "lang": "vb",
          "value": "CSharp11.CheckedUserDefinedOperators(Of T).op_CheckedDecrement(T)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"CSharp11.CheckedUserDefinedOperators`1.op_CheckedDecrement(`0)\" text=\"operator checked --(T)\" alt=\"CSharp11.CheckedUserDefinedOperators&lt;T&gt;.operator checked --(T)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"CSharp11.CheckedUserDefinedOperators`1.op_CheckedDecrement(`0)\" text=\"operator checked --(T)\" alt=\"CSharp11.CheckedUserDefinedOperators&lt;T&gt;.operator checked --(T)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "Not supported in c#"
          },
          {
            "lang": "vb",
            "value": "VB cannot support this operator."
          }
        ],
        "parameters": [
          {
            "id": "x",
            "type": {
              "uid": "{T}",
              "definition": "T",
              "name": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "{T}",
            "definition": "T",
            "name": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "samples/seed/src/DotnetNew/CSharp11.cs",
          "branch": "main",
          "repo": "https://github.com/dotnet/docfx"
        },
        "id": "op_CheckedDecrement",
        "path": "src/DotnetNew/CSharp11.cs",
        "startLine": 35,
        "endLine": 0,
        "isExternal": false
      },
      "assemblies": [
        "DotnetNew"
      ],
      "namespace": "CSharp11",
      "overload": {
        "uid": "CSharp11.CheckedUserDefinedOperators`1.op_CheckedDecrement*",
        "name": [
          {
            "lang": "csharp",
            "value": "operator checked --"
          },
          {
            "lang": "vb",
            "value": "op_CheckedDecrement"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "operator checked CheckedUserDefinedOperators.operator checked --"
          },
          {
            "lang": "vb",
            "value": "CheckedUserDefinedOperators.op_CheckedDecrement"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "operator checked CSharp11.CheckedUserDefinedOperators.operator checked --"
          },
          {
            "lang": "vb",
            "value": "CSharp11.CheckedUserDefinedOperators.op_CheckedDecrement"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "operator checked <xref uid=\"CSharp11.CheckedUserDefinedOperators`1.op_CheckedDecrement*\" text=\"--\" alt=\"CSharp11.CheckedUserDefinedOperators.operator checked --\"/>"
          }
        ]
      },
      "level": 0,
      "type": "operator",
      "summary": null,
      "platform": null
    },
    {
      "uid": "CSharp11.CheckedUserDefinedOperators`1.op_CheckedDivision(`0,`0)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "CSharp11.CheckedUserDefinedOperators`1",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "operator checked /(T, T)"
        },
        {
          "lang": "vb",
          "value": "op_CheckedDivision(T, T)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "CheckedUserDefinedOperators<T>.operator checked /(T, T)"
        },
        {
          "lang": "vb",
          "value": "CheckedUserDefinedOperators(Of T).op_CheckedDivision(T, T)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "CSharp11.CheckedUserDefinedOperators<T>.operator checked /(T, T)"
        },
        {
          "lang": "vb",
          "value": "CSharp11.CheckedUserDefinedOperators(Of T).op_CheckedDivision(T, T)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"CSharp11.CheckedUserDefinedOperators`1.op_CheckedDivision(`0,`0)\" text=\"operator checked /(T, T)\" alt=\"CSharp11.CheckedUserDefinedOperators&lt;T&gt;.operator checked /(T, T)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"CSharp11.CheckedUserDefinedOperators`1.op_CheckedDivision(`0,`0)\" text=\"operator checked /(T, T)\" alt=\"CSharp11.CheckedUserDefinedOperators&lt;T&gt;.operator checked /(T, T)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "Not supported in c#"
          },
          {
            "lang": "vb",
            "value": "VB cannot support this operator."
          }
        ],
        "parameters": [
          {
            "id": "lhs",
            "type": {
              "uid": "{T}",
              "definition": "T",
              "name": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
                }
              ]
            }
          },
          {
            "id": "rhs",
            "type": {
              "uid": "{T}",
              "definition": "T",
              "name": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "{T}",
            "definition": "T",
            "name": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "samples/seed/src/DotnetNew/CSharp11.cs",
          "branch": "main",
          "repo": "https://github.com/dotnet/docfx"
        },
        "id": "op_CheckedDivision",
        "path": "src/DotnetNew/CSharp11.cs",
        "startLine": 40,
        "endLine": 0,
        "isExternal": false
      },
      "assemblies": [
        "DotnetNew"
      ],
      "namespace": "CSharp11",
      "overload": {
        "uid": "CSharp11.CheckedUserDefinedOperators`1.op_CheckedDivision*",
        "name": [
          {
            "lang": "csharp",
            "value": "operator checked /"
          },
          {
            "lang": "vb",
            "value": "op_CheckedDivision"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "operator checked CheckedUserDefinedOperators.operator checked /"
          },
          {
            "lang": "vb",
            "value": "CheckedUserDefinedOperators.op_CheckedDivision"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "operator checked CSharp11.CheckedUserDefinedOperators.operator checked /"
          },
          {
            "lang": "vb",
            "value": "CSharp11.CheckedUserDefinedOperators.op_CheckedDivision"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "operator checked <xref uid=\"CSharp11.CheckedUserDefinedOperators`1.op_CheckedDivision*\" text=\"/\" alt=\"CSharp11.CheckedUserDefinedOperators.operator checked /\"/>"
          }
        ]
      },
      "level": 0,
      "type": "operator",
      "summary": null,
      "platform": null
    },
    {
      "uid": "CSharp11.CheckedUserDefinedOperators`1.op_CheckedExplicit(`0)~System.Int32",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "CSharp11.CheckedUserDefinedOperators`1",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "explicit operator checked Int32(T)"
        },
        {
          "lang": "vb",
          "value": "op_CheckedExplicit(T)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "CheckedUserDefinedOperators<T>.explicit operator checked Int32(T)"
        },
        {
          "lang": "vb",
          "value": "CheckedUserDefinedOperators(Of T).op_CheckedExplicit(T)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "CSharp11.CheckedUserDefinedOperators<T>.explicit operator checked System.Int32(T)"
        },
        {
          "lang": "vb",
          "value": "CSharp11.CheckedUserDefinedOperators(Of T).op_CheckedExplicit(T)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"CSharp11.CheckedUserDefinedOperators`1.op_CheckedExplicit(`0)~System.Int32\" text=\"explicit operator checked Int32(T)\" alt=\"CSharp11.CheckedUserDefinedOperators&lt;T&gt;.explicit operator checked System.Int32(T)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"CSharp11.CheckedUserDefinedOperators`1.op_CheckedExplicit(`0)~System.Int32\" text=\"explicit operator checked Int32(T)\" alt=\"CSharp11.CheckedUserDefinedOperators&lt;T&gt;.explicit operator checked System.Int32(T)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "Not supported in c#"
          },
          {
            "lang": "vb",
            "value": "VB cannot support this operator."
          }
        ],
        "parameters": [
          {
            "id": "x",
            "type": {
              "uid": "{T}",
              "definition": "T",
              "name": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Int32",
            "name": [
              {
                "lang": "csharp",
                "value": "Int32"
              },
              {
                "lang": "vb",
                "value": "Int32"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "Int32"
              },
              {
                "lang": "vb",
                "value": "Int32"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.Int32"
              },
              {
                "lang": "vb",
                "value": "System.Int32"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Int32\" text=\"Int32\" alt=\"System.Int32\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Int32\" text=\"Int32\" alt=\"System.Int32\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "samples/seed/src/DotnetNew/CSharp11.cs",
          "branch": "main",
          "repo": "https://github.com/dotnet/docfx"
        },
        "id": "op_CheckedExplicit",
        "path": "src/DotnetNew/CSharp11.cs",
        "startLine": 41,
        "endLine": 0,
        "isExternal": false
      },
      "assemblies": [
        "DotnetNew"
      ],
      "namespace": "CSharp11",
      "overload": {
        "uid": "CSharp11.CheckedUserDefinedOperators`1.op_CheckedExplicit*",
        "name": [
          {
            "lang": "csharp",
            "value": "explicit operator checked Int32"
          },
          {
            "lang": "vb",
            "value": "op_CheckedExplicit"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "explicit operator checked Int32"
          },
          {
            "lang": "vb",
            "value": "CheckedUserDefinedOperators.op_CheckedExplicit"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "explicit operator checked System.Int32"
          },
          {
            "lang": "vb",
            "value": "CSharp11.CheckedUserDefinedOperators.op_CheckedExplicit"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "explicit operator checked <xref uid=\"System.Int32*\" text=\"Int32\" alt=\"System.Int32\"/>"
          }
        ]
      },
      "level": 0,
      "type": "operator",
      "summary": null,
      "platform": null
    },
    {
      "uid": "CSharp11.CheckedUserDefinedOperators`1.op_CheckedIncrement(`0)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "CSharp11.CheckedUserDefinedOperators`1",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "operator checked ++(T)"
        },
        {
          "lang": "vb",
          "value": "op_CheckedIncrement(T)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "CheckedUserDefinedOperators<T>.operator checked ++(T)"
        },
        {
          "lang": "vb",
          "value": "CheckedUserDefinedOperators(Of T).op_CheckedIncrement(T)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "CSharp11.CheckedUserDefinedOperators<T>.operator checked ++(T)"
        },
        {
          "lang": "vb",
          "value": "CSharp11.CheckedUserDefinedOperators(Of T).op_CheckedIncrement(T)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"CSharp11.CheckedUserDefinedOperators`1.op_CheckedIncrement(`0)\" text=\"operator checked ++(T)\" alt=\"CSharp11.CheckedUserDefinedOperators&lt;T&gt;.operator checked ++(T)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"CSharp11.CheckedUserDefinedOperators`1.op_CheckedIncrement(`0)\" text=\"operator checked ++(T)\" alt=\"CSharp11.CheckedUserDefinedOperators&lt;T&gt;.operator checked ++(T)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "Not supported in c#"
          },
          {
            "lang": "vb",
            "value": "VB cannot support this operator."
          }
        ],
        "parameters": [
          {
            "id": "x",
            "type": {
              "uid": "{T}",
              "definition": "T",
              "name": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "{T}",
            "definition": "T",
            "name": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "samples/seed/src/DotnetNew/CSharp11.cs",
          "branch": "main",
          "repo": "https://github.com/dotnet/docfx"
        },
        "id": "op_CheckedIncrement",
        "path": "src/DotnetNew/CSharp11.cs",
        "startLine": 34,
        "endLine": 0,
        "isExternal": false
      },
      "assemblies": [
        "DotnetNew"
      ],
      "namespace": "CSharp11",
      "overload": {
        "uid": "CSharp11.CheckedUserDefinedOperators`1.op_CheckedIncrement*",
        "name": [
          {
            "lang": "csharp",
            "value": "operator checked ++"
          },
          {
            "lang": "vb",
            "value": "op_CheckedIncrement"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "operator checked CheckedUserDefinedOperators.operator checked ++"
          },
          {
            "lang": "vb",
            "value": "CheckedUserDefinedOperators.op_CheckedIncrement"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "operator checked CSharp11.CheckedUserDefinedOperators.operator checked ++"
          },
          {
            "lang": "vb",
            "value": "CSharp11.CheckedUserDefinedOperators.op_CheckedIncrement"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "operator checked <xref uid=\"CSharp11.CheckedUserDefinedOperators`1.op_CheckedIncrement*\" text=\"++\" alt=\"CSharp11.CheckedUserDefinedOperators.operator checked ++\"/>"
          }
        ]
      },
      "level": 0,
      "type": "operator",
      "summary": null,
      "platform": null
    },
    {
      "uid": "CSharp11.CheckedUserDefinedOperators`1.op_CheckedMultiply(`0,`0)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "CSharp11.CheckedUserDefinedOperators`1",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "operator checked *(T, T)"
        },
        {
          "lang": "vb",
          "value": "op_CheckedMultiply(T, T)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "CheckedUserDefinedOperators<T>.operator checked *(T, T)"
        },
        {
          "lang": "vb",
          "value": "CheckedUserDefinedOperators(Of T).op_CheckedMultiply(T, T)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "CSharp11.CheckedUserDefinedOperators<T>.operator checked *(T, T)"
        },
        {
          "lang": "vb",
          "value": "CSharp11.CheckedUserDefinedOperators(Of T).op_CheckedMultiply(T, T)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"CSharp11.CheckedUserDefinedOperators`1.op_CheckedMultiply(`0,`0)\" text=\"operator checked *(T, T)\" alt=\"CSharp11.CheckedUserDefinedOperators&lt;T&gt;.operator checked *(T, T)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"CSharp11.CheckedUserDefinedOperators`1.op_CheckedMultiply(`0,`0)\" text=\"operator checked *(T, T)\" alt=\"CSharp11.CheckedUserDefinedOperators&lt;T&gt;.operator checked *(T, T)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "Not supported in c#"
          },
          {
            "lang": "vb",
            "value": "VB cannot support this operator."
          }
        ],
        "parameters": [
          {
            "id": "lhs",
            "type": {
              "uid": "{T}",
              "definition": "T",
              "name": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
                }
              ]
            }
          },
          {
            "id": "rhs",
            "type": {
              "uid": "{T}",
              "definition": "T",
              "name": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "{T}",
            "definition": "T",
            "name": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "samples/seed/src/DotnetNew/CSharp11.cs",
          "branch": "main",
          "repo": "https://github.com/dotnet/docfx"
        },
        "id": "op_CheckedMultiply",
        "path": "src/DotnetNew/CSharp11.cs",
        "startLine": 39,
        "endLine": 0,
        "isExternal": false
      },
      "assemblies": [
        "DotnetNew"
      ],
      "namespace": "CSharp11",
      "overload": {
        "uid": "CSharp11.CheckedUserDefinedOperators`1.op_CheckedMultiply*",
        "name": [
          {
            "lang": "csharp",
            "value": "operator checked *"
          },
          {
            "lang": "vb",
            "value": "op_CheckedMultiply"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "operator checked CheckedUserDefinedOperators.operator checked *"
          },
          {
            "lang": "vb",
            "value": "CheckedUserDefinedOperators.op_CheckedMultiply"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "operator checked CSharp11.CheckedUserDefinedOperators.operator checked *"
          },
          {
            "lang": "vb",
            "value": "CSharp11.CheckedUserDefinedOperators.op_CheckedMultiply"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "operator checked <xref uid=\"CSharp11.CheckedUserDefinedOperators`1.op_CheckedMultiply*\" text=\"*\" alt=\"CSharp11.CheckedUserDefinedOperators.operator checked *\"/>"
          }
        ]
      },
      "level": 0,
      "type": "operator",
      "summary": null,
      "platform": null
    },
    {
      "uid": "CSharp11.CheckedUserDefinedOperators`1.op_CheckedSubtraction(`0,`0)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "CSharp11.CheckedUserDefinedOperators`1",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "operator checked -(T, T)"
        },
        {
          "lang": "vb",
          "value": "op_CheckedSubtraction(T, T)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "CheckedUserDefinedOperators<T>.operator checked -(T, T)"
        },
        {
          "lang": "vb",
          "value": "CheckedUserDefinedOperators(Of T).op_CheckedSubtraction(T, T)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "CSharp11.CheckedUserDefinedOperators<T>.operator checked -(T, T)"
        },
        {
          "lang": "vb",
          "value": "CSharp11.CheckedUserDefinedOperators(Of T).op_CheckedSubtraction(T, T)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"CSharp11.CheckedUserDefinedOperators`1.op_CheckedSubtraction(`0,`0)\" text=\"operator checked -(T, T)\" alt=\"CSharp11.CheckedUserDefinedOperators&lt;T&gt;.operator checked -(T, T)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"CSharp11.CheckedUserDefinedOperators`1.op_CheckedSubtraction(`0,`0)\" text=\"operator checked -(T, T)\" alt=\"CSharp11.CheckedUserDefinedOperators&lt;T&gt;.operator checked -(T, T)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "Not supported in c#"
          },
          {
            "lang": "vb",
            "value": "VB cannot support this operator."
          }
        ],
        "parameters": [
          {
            "id": "lhs",
            "type": {
              "uid": "{T}",
              "definition": "T",
              "name": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
                }
              ]
            }
          },
          {
            "id": "rhs",
            "type": {
              "uid": "{T}",
              "definition": "T",
              "name": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "{T}",
            "definition": "T",
            "name": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "samples/seed/src/DotnetNew/CSharp11.cs",
          "branch": "main",
          "repo": "https://github.com/dotnet/docfx"
        },
        "id": "op_CheckedSubtraction",
        "path": "src/DotnetNew/CSharp11.cs",
        "startLine": 38,
        "endLine": 0,
        "isExternal": false
      },
      "assemblies": [
        "DotnetNew"
      ],
      "namespace": "CSharp11",
      "overload": {
        "uid": "CSharp11.CheckedUserDefinedOperators`1.op_CheckedSubtraction*",
        "name": [
          {
            "lang": "csharp",
            "value": "operator checked -"
          },
          {
            "lang": "vb",
            "value": "op_CheckedSubtraction"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "operator checked CheckedUserDefinedOperators.operator checked -"
          },
          {
            "lang": "vb",
            "value": "CheckedUserDefinedOperators.op_CheckedSubtraction"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "operator checked CSharp11.CheckedUserDefinedOperators.operator checked -"
          },
          {
            "lang": "vb",
            "value": "CSharp11.CheckedUserDefinedOperators.op_CheckedSubtraction"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "operator checked <xref uid=\"CSharp11.CheckedUserDefinedOperators`1.op_CheckedSubtraction*\" text=\"-\" alt=\"CSharp11.CheckedUserDefinedOperators.operator checked -\"/>"
          }
        ]
      },
      "level": 0,
      "type": "operator",
      "summary": null,
      "platform": null
    },
    {
      "uid": "CSharp11.CheckedUserDefinedOperators`1.op_CheckedUnaryNegation(`0)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "CSharp11.CheckedUserDefinedOperators`1",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "operator checked -(T)"
        },
        {
          "lang": "vb",
          "value": "op_CheckedUnaryNegation(T)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "CheckedUserDefinedOperators<T>.operator checked -(T)"
        },
        {
          "lang": "vb",
          "value": "CheckedUserDefinedOperators(Of T).op_CheckedUnaryNegation(T)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "CSharp11.CheckedUserDefinedOperators<T>.operator checked -(T)"
        },
        {
          "lang": "vb",
          "value": "CSharp11.CheckedUserDefinedOperators(Of T).op_CheckedUnaryNegation(T)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"CSharp11.CheckedUserDefinedOperators`1.op_CheckedUnaryNegation(`0)\" text=\"operator checked -(T)\" alt=\"CSharp11.CheckedUserDefinedOperators&lt;T&gt;.operator checked -(T)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"CSharp11.CheckedUserDefinedOperators`1.op_CheckedUnaryNegation(`0)\" text=\"operator checked -(T)\" alt=\"CSharp11.CheckedUserDefinedOperators&lt;T&gt;.operator checked -(T)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "Not supported in c#"
          },
          {
            "lang": "vb",
            "value": "VB cannot support this operator."
          }
        ],
        "parameters": [
          {
            "id": "x",
            "type": {
              "uid": "{T}",
              "definition": "T",
              "name": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "{T}",
            "definition": "T",
            "name": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "samples/seed/src/DotnetNew/CSharp11.cs",
          "branch": "main",
          "repo": "https://github.com/dotnet/docfx"
        },
        "id": "op_CheckedUnaryNegation",
        "path": "src/DotnetNew/CSharp11.cs",
        "startLine": 36,
        "endLine": 0,
        "isExternal": false
      },
      "assemblies": [
        "DotnetNew"
      ],
      "namespace": "CSharp11",
      "overload": {
        "uid": "CSharp11.CheckedUserDefinedOperators`1.op_CheckedUnaryNegation*",
        "name": [
          {
            "lang": "csharp",
            "value": "operator checked -"
          },
          {
            "lang": "vb",
            "value": "op_CheckedUnaryNegation"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "operator checked CheckedUserDefinedOperators.operator checked -"
          },
          {
            "lang": "vb",
            "value": "CheckedUserDefinedOperators.op_CheckedUnaryNegation"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "operator checked CSharp11.CheckedUserDefinedOperators.operator checked -"
          },
          {
            "lang": "vb",
            "value": "CSharp11.CheckedUserDefinedOperators.op_CheckedUnaryNegation"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "operator checked <xref uid=\"CSharp11.CheckedUserDefinedOperators`1.op_CheckedUnaryNegation*\" text=\"-\" alt=\"CSharp11.CheckedUserDefinedOperators.operator checked -\"/>"
          }
        ]
      },
      "level": 0,
      "type": "operator",
      "summary": null,
      "platform": null
    },
    {
      "uid": "CSharp11.CheckedUserDefinedOperators`1.op_Decrement(`0)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "CSharp11.CheckedUserDefinedOperators`1",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "operator --(T)"
        },
        {
          "lang": "vb",
          "value": "op_Decrement(T)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "CheckedUserDefinedOperators<T>.operator --(T)"
        },
        {
          "lang": "vb",
          "value": "CheckedUserDefinedOperators(Of T).op_Decrement(T)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "CSharp11.CheckedUserDefinedOperators<T>.operator --(T)"
        },
        {
          "lang": "vb",
          "value": "CSharp11.CheckedUserDefinedOperators(Of T).op_Decrement(T)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"CSharp11.CheckedUserDefinedOperators`1.op_Decrement(`0)\" text=\"operator --(T)\" alt=\"CSharp11.CheckedUserDefinedOperators&lt;T&gt;.operator --(T)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"CSharp11.CheckedUserDefinedOperators`1.op_Decrement(`0)\" text=\"operator --(T)\" alt=\"CSharp11.CheckedUserDefinedOperators&lt;T&gt;.operator --(T)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "static T operator --(T x)"
          },
          {
            "lang": "vb",
            "value": "VB cannot support this operator."
          }
        ],
        "parameters": [
          {
            "id": "x",
            "type": {
              "uid": "{T}",
              "definition": "T",
              "name": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "{T}",
            "definition": "T",
            "name": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "samples/seed/src/DotnetNew/CSharp11.cs",
          "branch": "main",
          "repo": "https://github.com/dotnet/docfx"
        },
        "id": "op_Decrement",
        "path": "src/DotnetNew/CSharp11.cs",
        "startLine": 26,
        "endLine": 0,
        "isExternal": false
      },
      "assemblies": [
        "DotnetNew"
      ],
      "namespace": "CSharp11",
      "overload": {
        "uid": "CSharp11.CheckedUserDefinedOperators`1.op_Decrement*",
        "name": [
          {
            "lang": "csharp",
            "value": "operator --"
          },
          {
            "lang": "vb",
            "value": "op_Decrement"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "operator CheckedUserDefinedOperators.operator --"
          },
          {
            "lang": "vb",
            "value": "CheckedUserDefinedOperators.op_Decrement"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "operator CSharp11.CheckedUserDefinedOperators.operator --"
          },
          {
            "lang": "vb",
            "value": "CSharp11.CheckedUserDefinedOperators.op_Decrement"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "operator <xref uid=\"CSharp11.CheckedUserDefinedOperators`1.op_Decrement*\" text=\"--\" alt=\"CSharp11.CheckedUserDefinedOperators.operator --\"/>"
          }
        ]
      },
      "level": 0,
      "type": "operator",
      "summary": null,
      "platform": null
    },
    {
      "uid": "CSharp11.CheckedUserDefinedOperators`1.op_Division(`0,`0)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "CSharp11.CheckedUserDefinedOperators`1",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "operator /(T, T)"
        },
        {
          "lang": "vb",
          "value": "/(T, T)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "CheckedUserDefinedOperators<T>.operator /(T, T)"
        },
        {
          "lang": "vb",
          "value": "CheckedUserDefinedOperators(Of T)./(T, T)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "CSharp11.CheckedUserDefinedOperators<T>.operator /(T, T)"
        },
        {
          "lang": "vb",
          "value": "CSharp11.CheckedUserDefinedOperators(Of T)./(T, T)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"CSharp11.CheckedUserDefinedOperators`1.op_Division(`0,`0)\" text=\"operator /(T, T)\" alt=\"CSharp11.CheckedUserDefinedOperators&lt;T&gt;.operator /(T, T)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"CSharp11.CheckedUserDefinedOperators`1.op_Division(`0,`0)\" text=\"operator /(T, T)\" alt=\"CSharp11.CheckedUserDefinedOperators&lt;T&gt;.operator /(T, T)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "static T operator /(T lhs, T rhs)"
          },
          {
            "lang": "vb",
            "value": "Shared Operator /(lhs As T, rhs As T) As T"
          }
        ],
        "parameters": [
          {
            "id": "lhs",
            "type": {
              "uid": "{T}",
              "definition": "T",
              "name": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
                }
              ]
            }
          },
          {
            "id": "rhs",
            "type": {
              "uid": "{T}",
              "definition": "T",
              "name": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "{T}",
            "definition": "T",
            "name": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "samples/seed/src/DotnetNew/CSharp11.cs",
          "branch": "main",
          "repo": "https://github.com/dotnet/docfx"
        },
        "id": "op_Division",
        "path": "src/DotnetNew/CSharp11.cs",
        "startLine": 31,
        "endLine": 0,
        "isExternal": false
      },
      "assemblies": [
        "DotnetNew"
      ],
      "namespace": "CSharp11",
      "overload": {
        "uid": "CSharp11.CheckedUserDefinedOperators`1.op_Division*",
        "name": [
          {
            "lang": "csharp",
            "value": "operator /"
          },
          {
            "lang": "vb",
            "value": "/"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "operator CheckedUserDefinedOperators.operator /"
          },
          {
            "lang": "vb",
            "value": "/"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "operator CSharp11.CheckedUserDefinedOperators.operator /"
          },
          {
            "lang": "vb",
            "value": "/"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "operator <xref uid=\"CSharp11.CheckedUserDefinedOperators`1.op_Division*\" text=\"/\" alt=\"CSharp11.CheckedUserDefinedOperators.operator /\"/>"
          }
        ]
      },
      "level": 0,
      "type": "operator",
      "summary": null,
      "platform": null
    },
    {
      "uid": "CSharp11.CheckedUserDefinedOperators`1.op_Explicit(`0)~System.Int32",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "CSharp11.CheckedUserDefinedOperators`1",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "explicit operator Int32(T)"
        },
        {
          "lang": "vb",
          "value": "CType(T)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "CheckedUserDefinedOperators<T>.explicit operator Int32(T)"
        },
        {
          "lang": "vb",
          "value": "CheckedUserDefinedOperators(Of T).CType(T)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "CSharp11.CheckedUserDefinedOperators<T>.explicit operator System.Int32(T)"
        },
        {
          "lang": "vb",
          "value": "CSharp11.CheckedUserDefinedOperators(Of T).CType(T)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"CSharp11.CheckedUserDefinedOperators`1.op_Explicit(`0)~System.Int32\" text=\"explicit operator Int32(T)\" alt=\"CSharp11.CheckedUserDefinedOperators&lt;T&gt;.explicit operator System.Int32(T)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"CSharp11.CheckedUserDefinedOperators`1.op_Explicit(`0)~System.Int32\" text=\"explicit operator Int32(T)\" alt=\"CSharp11.CheckedUserDefinedOperators&lt;T&gt;.explicit operator System.Int32(T)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "static explicit operator int (T x)"
          },
          {
            "lang": "vb",
            "value": "Shared Narrowing Operator CType(x As T) As Integer"
          }
        ],
        "parameters": [
          {
            "id": "x",
            "type": {
              "uid": "{T}",
              "definition": "T",
              "name": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Int32",
            "name": [
              {
                "lang": "csharp",
                "value": "Int32"
              },
              {
                "lang": "vb",
                "value": "Int32"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "Int32"
              },
              {
                "lang": "vb",
                "value": "Int32"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.Int32"
              },
              {
                "lang": "vb",
                "value": "System.Int32"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Int32\" text=\"Int32\" alt=\"System.Int32\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Int32\" text=\"Int32\" alt=\"System.Int32\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "samples/seed/src/DotnetNew/CSharp11.cs",
          "branch": "main",
          "repo": "https://github.com/dotnet/docfx"
        },
        "id": "op_Explicit",
        "path": "src/DotnetNew/CSharp11.cs",
        "startLine": 32,
        "endLine": 0,
        "isExternal": false
      },
      "assemblies": [
        "DotnetNew"
      ],
      "namespace": "CSharp11",
      "overload": {
        "uid": "CSharp11.CheckedUserDefinedOperators`1.op_Explicit*",
        "name": [
          {
            "lang": "csharp",
            "value": "explicit operator Int32"
          },
          {
            "lang": "vb",
            "value": "CType"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "explicit operator Int32"
          },
          {
            "lang": "vb",
            "value": "CType"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "explicit operator System.Int32"
          },
          {
            "lang": "vb",
            "value": "CType"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "explicit operator <xref uid=\"System.Int32*\" text=\"Int32\" alt=\"System.Int32\"/>"
          }
        ]
      },
      "level": 0,
      "type": "operator",
      "summary": null,
      "platform": null
    },
    {
      "uid": "CSharp11.CheckedUserDefinedOperators`1.op_Increment(`0)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "CSharp11.CheckedUserDefinedOperators`1",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "operator ++(T)"
        },
        {
          "lang": "vb",
          "value": "op_Increment(T)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "CheckedUserDefinedOperators<T>.operator ++(T)"
        },
        {
          "lang": "vb",
          "value": "CheckedUserDefinedOperators(Of T).op_Increment(T)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "CSharp11.CheckedUserDefinedOperators<T>.operator ++(T)"
        },
        {
          "lang": "vb",
          "value": "CSharp11.CheckedUserDefinedOperators(Of T).op_Increment(T)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"CSharp11.CheckedUserDefinedOperators`1.op_Increment(`0)\" text=\"operator ++(T)\" alt=\"CSharp11.CheckedUserDefinedOperators&lt;T&gt;.operator ++(T)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"CSharp11.CheckedUserDefinedOperators`1.op_Increment(`0)\" text=\"operator ++(T)\" alt=\"CSharp11.CheckedUserDefinedOperators&lt;T&gt;.operator ++(T)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "static T operator ++(T x)"
          },
          {
            "lang": "vb",
            "value": "VB cannot support this operator."
          }
        ],
        "parameters": [
          {
            "id": "x",
            "type": {
              "uid": "{T}",
              "definition": "T",
              "name": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "{T}",
            "definition": "T",
            "name": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "samples/seed/src/DotnetNew/CSharp11.cs",
          "branch": "main",
          "repo": "https://github.com/dotnet/docfx"
        },
        "id": "op_Increment",
        "path": "src/DotnetNew/CSharp11.cs",
        "startLine": 25,
        "endLine": 0,
        "isExternal": false
      },
      "assemblies": [
        "DotnetNew"
      ],
      "namespace": "CSharp11",
      "overload": {
        "uid": "CSharp11.CheckedUserDefinedOperators`1.op_Increment*",
        "name": [
          {
            "lang": "csharp",
            "value": "operator ++"
          },
          {
            "lang": "vb",
            "value": "op_Increment"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "operator CheckedUserDefinedOperators.operator ++"
          },
          {
            "lang": "vb",
            "value": "CheckedUserDefinedOperators.op_Increment"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "operator CSharp11.CheckedUserDefinedOperators.operator ++"
          },
          {
            "lang": "vb",
            "value": "CSharp11.CheckedUserDefinedOperators.op_Increment"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "operator <xref uid=\"CSharp11.CheckedUserDefinedOperators`1.op_Increment*\" text=\"++\" alt=\"CSharp11.CheckedUserDefinedOperators.operator ++\"/>"
          }
        ]
      },
      "level": 0,
      "type": "operator",
      "summary": null,
      "platform": null
    },
    {
      "uid": "CSharp11.CheckedUserDefinedOperators`1.op_Multiply(`0,`0)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "CSharp11.CheckedUserDefinedOperators`1",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "operator *(T, T)"
        },
        {
          "lang": "vb",
          "value": "*(T, T)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "CheckedUserDefinedOperators<T>.operator *(T, T)"
        },
        {
          "lang": "vb",
          "value": "CheckedUserDefinedOperators(Of T).*(T, T)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "CSharp11.CheckedUserDefinedOperators<T>.operator *(T, T)"
        },
        {
          "lang": "vb",
          "value": "CSharp11.CheckedUserDefinedOperators(Of T).*(T, T)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"CSharp11.CheckedUserDefinedOperators`1.op_Multiply(`0,`0)\" text=\"operator *(T, T)\" alt=\"CSharp11.CheckedUserDefinedOperators&lt;T&gt;.operator *(T, T)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"CSharp11.CheckedUserDefinedOperators`1.op_Multiply(`0,`0)\" text=\"operator *(T, T)\" alt=\"CSharp11.CheckedUserDefinedOperators&lt;T&gt;.operator *(T, T)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "static T operator *(T lhs, T rhs)"
          },
          {
            "lang": "vb",
            "value": "Shared Operator *(lhs As T, rhs As T) As T"
          }
        ],
        "parameters": [
          {
            "id": "lhs",
            "type": {
              "uid": "{T}",
              "definition": "T",
              "name": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
                }
              ]
            }
          },
          {
            "id": "rhs",
            "type": {
              "uid": "{T}",
              "definition": "T",
              "name": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "{T}",
            "definition": "T",
            "name": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "samples/seed/src/DotnetNew/CSharp11.cs",
          "branch": "main",
          "repo": "https://github.com/dotnet/docfx"
        },
        "id": "op_Multiply",
        "path": "src/DotnetNew/CSharp11.cs",
        "startLine": 30,
        "endLine": 0,
        "isExternal": false
      },
      "assemblies": [
        "DotnetNew"
      ],
      "namespace": "CSharp11",
      "overload": {
        "uid": "CSharp11.CheckedUserDefinedOperators`1.op_Multiply*",
        "name": [
          {
            "lang": "csharp",
            "value": "operator *"
          },
          {
            "lang": "vb",
            "value": "*"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "operator CheckedUserDefinedOperators.operator *"
          },
          {
            "lang": "vb",
            "value": "*"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "operator CSharp11.CheckedUserDefinedOperators.operator *"
          },
          {
            "lang": "vb",
            "value": "*"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "operator <xref uid=\"CSharp11.CheckedUserDefinedOperators`1.op_Multiply*\" text=\"*\" alt=\"CSharp11.CheckedUserDefinedOperators.operator *\"/>"
          }
        ]
      },
      "level": 0,
      "type": "operator",
      "summary": null,
      "platform": null
    },
    {
      "uid": "CSharp11.CheckedUserDefinedOperators`1.op_Subtraction(`0,`0)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "CSharp11.CheckedUserDefinedOperators`1",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "operator -(T, T)"
        },
        {
          "lang": "vb",
          "value": "-(T, T)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "CheckedUserDefinedOperators<T>.operator -(T, T)"
        },
        {
          "lang": "vb",
          "value": "CheckedUserDefinedOperators(Of T).-(T, T)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "CSharp11.CheckedUserDefinedOperators<T>.operator -(T, T)"
        },
        {
          "lang": "vb",
          "value": "CSharp11.CheckedUserDefinedOperators(Of T).-(T, T)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"CSharp11.CheckedUserDefinedOperators`1.op_Subtraction(`0,`0)\" text=\"operator -(T, T)\" alt=\"CSharp11.CheckedUserDefinedOperators&lt;T&gt;.operator -(T, T)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"CSharp11.CheckedUserDefinedOperators`1.op_Subtraction(`0,`0)\" text=\"operator -(T, T)\" alt=\"CSharp11.CheckedUserDefinedOperators&lt;T&gt;.operator -(T, T)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "static T operator -(T lhs, T rhs)"
          },
          {
            "lang": "vb",
            "value": "Shared Operator -(lhs As T, rhs As T) As T"
          }
        ],
        "parameters": [
          {
            "id": "lhs",
            "type": {
              "uid": "{T}",
              "definition": "T",
              "name": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
                }
              ]
            }
          },
          {
            "id": "rhs",
            "type": {
              "uid": "{T}",
              "definition": "T",
              "name": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "{T}",
            "definition": "T",
            "name": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "samples/seed/src/DotnetNew/CSharp11.cs",
          "branch": "main",
          "repo": "https://github.com/dotnet/docfx"
        },
        "id": "op_Subtraction",
        "path": "src/DotnetNew/CSharp11.cs",
        "startLine": 29,
        "endLine": 0,
        "isExternal": false
      },
      "assemblies": [
        "DotnetNew"
      ],
      "namespace": "CSharp11",
      "overload": {
        "uid": "CSharp11.CheckedUserDefinedOperators`1.op_Subtraction*",
        "name": [
          {
            "lang": "csharp",
            "value": "operator -"
          },
          {
            "lang": "vb",
            "value": "-"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "operator CheckedUserDefinedOperators.operator -"
          },
          {
            "lang": "vb",
            "value": "-"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "operator CSharp11.CheckedUserDefinedOperators.operator -"
          },
          {
            "lang": "vb",
            "value": "-"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "operator <xref uid=\"CSharp11.CheckedUserDefinedOperators`1.op_Subtraction*\" text=\"-\" alt=\"CSharp11.CheckedUserDefinedOperators.operator -\"/>"
          }
        ]
      },
      "level": 0,
      "type": "operator",
      "summary": null,
      "platform": null
    },
    {
      "uid": "CSharp11.CheckedUserDefinedOperators`1.op_UnaryNegation(`0)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "CSharp11.CheckedUserDefinedOperators`1",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "operator -(T)"
        },
        {
          "lang": "vb",
          "value": "-(T)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "CheckedUserDefinedOperators<T>.operator -(T)"
        },
        {
          "lang": "vb",
          "value": "CheckedUserDefinedOperators(Of T).-(T)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "CSharp11.CheckedUserDefinedOperators<T>.operator -(T)"
        },
        {
          "lang": "vb",
          "value": "CSharp11.CheckedUserDefinedOperators(Of T).-(T)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"CSharp11.CheckedUserDefinedOperators`1.op_UnaryNegation(`0)\" text=\"operator -(T)\" alt=\"CSharp11.CheckedUserDefinedOperators&lt;T&gt;.operator -(T)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"CSharp11.CheckedUserDefinedOperators`1.op_UnaryNegation(`0)\" text=\"operator -(T)\" alt=\"CSharp11.CheckedUserDefinedOperators&lt;T&gt;.operator -(T)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "static T operator -(T x)"
          },
          {
            "lang": "vb",
            "value": "Shared Operator -(x As T) As T"
          }
        ],
        "parameters": [
          {
            "id": "x",
            "type": {
              "uid": "{T}",
              "definition": "T",
              "name": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "{T}",
            "definition": "T",
            "name": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "samples/seed/src/DotnetNew/CSharp11.cs",
          "branch": "main",
          "repo": "https://github.com/dotnet/docfx"
        },
        "id": "op_UnaryNegation",
        "path": "src/DotnetNew/CSharp11.cs",
        "startLine": 27,
        "endLine": 0,
        "isExternal": false
      },
      "assemblies": [
        "DotnetNew"
      ],
      "namespace": "CSharp11",
      "overload": {
        "uid": "CSharp11.CheckedUserDefinedOperators`1.op_UnaryNegation*",
        "name": [
          {
            "lang": "csharp",
            "value": "operator -"
          },
          {
            "lang": "vb",
            "value": "-"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "operator CheckedUserDefinedOperators.operator -"
          },
          {
            "lang": "vb",
            "value": "-"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "operator CSharp11.CheckedUserDefinedOperators.operator -"
          },
          {
            "lang": "vb",
            "value": "-"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "operator <xref uid=\"CSharp11.CheckedUserDefinedOperators`1.op_UnaryNegation*\" text=\"-\" alt=\"CSharp11.CheckedUserDefinedOperators.operator -\"/>"
          }
        ]
      },
      "level": 0,
      "type": "operator",
      "summary": null,
      "platform": null
    }
  ],
  "langs": [
    "csharp",
    "vb"
  ],
  "name": [
    {
      "lang": "csharp",
      "value": "CheckedUserDefinedOperators<T>"
    },
    {
      "lang": "vb",
      "value": "CheckedUserDefinedOperators(Of T)"
    }
  ],
  "nameWithType": [
    {
      "lang": "csharp",
      "value": "CheckedUserDefinedOperators<T>"
    },
    {
      "lang": "vb",
      "value": "CheckedUserDefinedOperators(Of T)"
    }
  ],
  "fullName": [
    {
      "lang": "csharp",
      "value": "CSharp11.CheckedUserDefinedOperators<T>"
    },
    {
      "lang": "vb",
      "value": "CSharp11.CheckedUserDefinedOperators(Of T)"
    }
  ],
  "type": "interface",
  "source": {
    "remote": {
      "path": "samples/seed/src/DotnetNew/CSharp11.cs",
      "branch": "main",
      "repo": "https://github.com/dotnet/docfx"
    },
    "id": "CheckedUserDefinedOperators",
    "path": "src/DotnetNew/CSharp11.cs",
    "startLine": 23,
    "endLine": 0,
    "isExternal": false
  },
  "assemblies": [
    "DotnetNew"
  ],
  "namespace": {
    "uid": "CSharp11",
    "isEii": false,
    "isExtensionMethod": false,
    "name": [
      {
        "lang": "csharp",
        "value": "CSharp11"
      },
      {
        "lang": "vb",
        "value": "CSharp11"
      }
    ],
    "nameWithType": [
      {
        "lang": "csharp",
        "value": "CSharp11"
      },
      {
        "lang": "vb",
        "value": "CSharp11"
      }
    ],
    "fullName": [
      {
        "lang": "csharp",
        "value": "CSharp11"
      },
      {
        "lang": "vb",
        "value": "CSharp11"
      }
    ],
    "specName": [
      {
        "lang": "csharp",
        "value": "<xref uid=\"CSharp11\" text=\"CSharp11\" alt=\"CSharp11\"/>"
      },
      {
        "lang": "vb",
        "value": "<xref uid=\"CSharp11\" text=\"CSharp11\" alt=\"CSharp11\"/>"
      }
    ],
    "level": 0
  },
  "syntax": {
    "content": [
      {
        "lang": "csharp",
        "value": "public interface CheckedUserDefinedOperators<T>\n    where T : CheckedUserDefinedOperators<T>"
      },
      {
        "lang": "vb",
        "value": "Public Interface CheckedUserDefinedOperators(Of T As CheckedUserDefinedOperators(Of T))"
      }
    ],
    "typeParameters": [
      {
        "id": "T"
      }
    ]
  },
  "level": 0,
  "_appTitle": "docfx seed website",
  "_enableSearch": true,
  "_systemKeys": [
    "uid",
    "isEii",
    "isExtensionMethod",
    "parent",
    "children",
    "href",
    "langs",
    "name",
    "nameWithType",
    "fullName",
    "type",
    "source",
    "documentation",
    "assemblies",
    "namespace",
    "summary",
    "remarks",
    "example",
    "syntax",
    "overridden",
    "overload",
    "exceptions",
    "seealso",
    "see",
    "inheritance",
    "derivedClasses",
    "level",
    "implements",
    "inheritedMembers",
    "extensionMethods",
    "conceptual",
    "platform",
    "attributes",
    "additionalNotes"
  ],
  "_key": "obj/api/CSharp11.CheckedUserDefinedOperators-1.yml",
  "_lang": "csharp",
  "_navKey": "~/toc.yml",
  "_navPath": "toc.html",
  "_navRel": "../toc.html",
  "_path": "api/CSharp11.CheckedUserDefinedOperators-1.html",
  "_rel": "../",
  "_tocKey": "~/obj/api/toc.yml",
  "_tocPath": "api/toc.html",
  "_tocRel": "toc.html",
  "__global": {
    "namespacesInSubtitle": "Namespaces",
    "classesInSubtitle": "Classes",
    "structsInSubtitle": "Structs",
    "interfacesInSubtitle": "Interfaces",
    "enumsInSubtitle": "Enums",
    "delegatesInSubtitle": "Delegates",
    "constructorsInSubtitle": "Constructors",
    "fieldsInSubtitle": "Fields",
    "propertiesInSubtitle": "Properties",
    "methodsInSubtitle": "Methods",
    "eventsInSubtitle": "Events",
    "operatorsInSubtitle": "Operators",
    "eiisInSubtitle": "Explicit Interface Implementations",
    "functionsInSubtitle": "Functions",
    "variablesInSubtitle": "Variables",
    "typeAliasesInSubtitle": "Type Aliases",
    "membersInSubtitle": "Members",
    "improveThisDoc": "Improve this Doc",
    "viewSource": "View Source",
    "inheritance": "Inheritance",
    "inheritedMembers": "Inherited Members",
    "package": "Package",
    "namespace": "Namespace",
    "assembly": "Assembly",
    "syntax": "Syntax",
    "overrides": "Overrides",
    "implements": "Implements",
    "remarks": "Remarks",
    "examples": "Examples",
    "seealso": "See Also",
    "declaration": "Declaration",
    "parameters": "Parameters",
    "typeParameters": "Type Parameters",
    "type": "Type",
    "name": "Name",
    "description": "Description",
    "returns": "Returns",
    "fieldValue": "Field Value",
    "propertyValue": "Property Value",
    "eventType": "Event Type",
    "variableValue": "Variable Value",
    "typeAliasType": "Type Alias Type",
    "exceptions": "Exceptions",
    "condition": "Condition",
    "extensionMethods": "Extension Methods",
    "note": "<h5>Note</h5>",
    "warning": "<h5>Warning</h5>",
    "tip": "<h5>Tip</h5>",
    "important": "<h5>Important</h5>",
    "caution": "<h5>Caution</h5>",
    "tocToggleButton": "Show / Hide Table of Contents",
    "tocFilter": "Enter here to filter...",
    "search": "Search",
    "searchResults": "Search Results for",
    "pageFirst": "First",
    "pagePrev": "Previous",
    "pageNext": "Next",
    "pageLast": "Last",
    "inThisArticle": "In This Article",
    "backToTop": "Back to top",
    "_shared": {}
  }
}